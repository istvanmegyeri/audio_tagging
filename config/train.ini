[core.experiments.TrainModel]
db_reader = db_reader.MelSpectogramm
compile_params = comp_params
fit_params = fit_params
batch_size = 32
m_path = saved_models/LeNet.h5
model = models.LeNet

[db_reader.MelSpectogramm]
labels = res/labels.npz
features = res/mel_features.npz
test_size = 0.2

##################Model settings##############################
[models.MLP]
nb_classes = 80
n_neurons = 100
use_softmax = False

[models.LeNet]
nb_classes = 80
use_softmax = False
regularizer = l2
regularizer.l = 1e-3

[fit_params]
epochs = 10000
verbose = 1
callbacks = core.object_holders.CallbackHolder

[core.object_holders.CallbackHolder]
object_name = tensorflow.python.keras.callbacks.EarlyStopping,core.metrics.MultiClassMetrics

[core.metrics.MultiClassMetrics]

[tensorflow.python.keras.callbacks.EarlyStopping]
monitor = loss
min_delta = 1e-4
patience = 10
verbose = 1
#restore_best_weights=True

[tensorflow.python.keras.callbacks.TensorBoard]
log_dir = saved_models/logs/

[comp_params]
optimizer = tensorflow.python.keras.optimizers.Adam
loss = tensorflow.python.keras.losses.binary_crossentropy
#metrics = tensorflow.python.keras.metrics.binary_accuracy

